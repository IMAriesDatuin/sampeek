/* -------------------------------------------------- */
/* FOOTER
/* -------------------------------------------------- */

// OPTIONS
$footer-options: (
	text-color: $white, // Set the default color for all elements.
	text-hover-color: $primary, // Set the hover color for all elements.
	background-color: transparent, // Set the nav panel's background color.
	duration: 1000ms,
	delay: 200ms,
	ease: $easeWipe
);


// MAIN
.footer {

	$self: &;

	pointer-events: none;
	//overflow: hidden;
	position: relative;
	padding: {
		top: 8rem;
		left: 5rem;
		right: 5rem;
	}
	width: 100%;
	background: map-get($footer-options, background-color);

	&-container {

		margin: {
			left: auto;
			right: auto;
		};
		//padding: $gutter;
		max-width: 2560px;

		.cell {
			//margin-bottom: 6rem;
			padding: {
				//left: 1rem;
				//right: 1rem;
			}
		}

		#{$self}-menu,
		#{$self}-social,
		#{$self}-contact-info {

			position: relative;
			margin-top: 4rem;
			padding-bottom: 2rem;

			&::before {
				content: '';
				z-index: 1;
				position: absolute;
				left: 0;
				bottom: 0;
				width: 25px;
				height: 2px;
				background: $white;
			}

			&::after {

				content: '';
				position: absolute;
				left: 0;
				bottom: 0;
				width: 90%;
				height: 1px;
				border-bottom: thin solid $white;

				@include break($type: 'width', $min: 0, $max: $mobile, $orientation: 'both') {
					width: 100%;
				}

			}

		}

		#{$self}-menu {

			margin-bottom: 2rem;

			li {

				overflow: hidden;
				display: block;
				margin-bottom: 0.5rem;

				a {

					@include transition(
						$property: (color),
						$duration: map-get($hero-options, duration),
						$delay: map-get($hero-options, delay),
						$ease: map-get($hero-options, ease),
						$optimize: false
					);
					overflow: hidden;
					position: relative;
					color: map-get($hero-options, text-color);
					font: map-get($hero-options, font);
					font-size: 1em;
					letter-spacing: 0.125em;
					text-transform: uppercase;
					white-space: nowrap;

					&::before {
						@include transition(
							$property: (width),
							$duration: map-get($hero-options, duration),
							$delay: map-get($hero-options, delay),
							$ease: map-get($hero-options, ease),
							$optimize: false
						);
						content: attr(data-letters);
						z-index: 1;
						overflow: hidden;
						position: absolute;
						//top: 0;
						left: 0;
						width: 0%;
						height: 100%;
						color: map-get($hero-options, text-hover-color);
						background: map-get($hero-options, background-hover-color);
					}

					&:hover {

						color: map-get($hero-options, text-hover-color);

						&::before {
							width: 100%;
						}

					}

				}

				&:not(:last-child)::after {
					display: none;
					content: '/';
					margin: { 
						left: 0.5rem;
						right: 0.5rem;
					}
				}
				
			}

		}

		#{$self}-social {

			margin-bottom: 2rem;

			li {

				overflow: hidden;
				display: block;
				margin-bottom: 0.5rem;

				a {

					@include transition(
						$property: (color),
						$duration: map-get($hero-options, duration),
						$delay: map-get($hero-options, delay),
						$ease: map-get($hero-options, ease),
						$optimize: false
					);
					overflow: hidden;
					position: relative;
					color: map-get($hero-options, text-color);
					font: map-get($hero-options, font);
					font-size: 1em;
					letter-spacing: 0.125em;
					text-transform: uppercase;
					white-space: nowrap;

					&::before {
						@include transition(
							$property: (width),
							$duration: map-get($hero-options, duration),
							$delay: map-get($hero-options, delay),
							$ease: map-get($hero-options, ease),
							$optimize: false
						);
						content: attr(data-letters);
						z-index: 1;
						overflow: hidden;
						position: absolute;
						//top: 0;
						left: 0;
						width: 0%;
						height: 100%;
						color: map-get($hero-options, text-hover-color);
						background: map-get($hero-options, background-hover-color);
					}

					&:hover {

						color: map-get($hero-options, text-hover-color);

						&::before {
							width: 100%;
						}

					}

				}

				&:not(:last-child)::after {
					display: none;
					content: '/';
					margin: { 
						left: 0.5rem;
						right: 0.5rem;
					}
				}

			}

		}

		#{$self}-contact-info {

			margin-bottom: 2rem;

			li {

				overflow: hidden;
				display: block;
				margin-bottom: 0.5rem;

				a {

					@include transition(
						$property: (color),
						$duration: map-get($hero-options, duration),
						$delay: map-get($hero-options, delay),
						$ease: map-get($hero-options, ease),
						$optimize: false
					);
					overflow: hidden;
					position: relative;
					color: map-get($hero-options, text-color);
					font: map-get($hero-options, font);
					font-size: 1em;
					letter-spacing: 0.125em;
					text-transform: uppercase;
					white-space: nowrap;

					&::before {
						@include transition(
							$property: (width),
							$duration: map-get($hero-options, duration),
							$delay: map-get($hero-options, delay),
							$ease: map-get($hero-options, ease),
							$optimize: false
						);
						content: attr(data-letters);
						z-index: 1;
						overflow: hidden;
						position: absolute;
						//top: 0;
						left: 0;
						width: 0%;
						height: 100%;
						color: map-get($hero-options, text-hover-color);
						background: map-get($hero-options, background-hover-color);
					}

					&:hover {

						color: map-get($hero-options, text-hover-color);

						&::before {
							width: 100%;
						}

					}

				}

				&:not(:last-child)::after {
					display: none;
					content: '/';
					margin: { 
						left: 0.5rem;
						right: 0.5rem;
					}
				}

			}

		}

		@include break($type: 'width', $min: 0, $max: $mobile, $orientation: 'both') {
			max-width: 100%;
		}

	}

	&-legal {

		display: block;
		margin: {
			top: 6rem;
			right: auto;
			bottom: 6rem;
			left: auto;
		}
		width: 100%;
		text-align: center;

		li {

			display: inline-block;
			color: $dark-gray;
			font-size: 0.75em;
			letter-spacing: 0.125em;

			a {

				color: inherit;

				&:hover {
					color: $secondary;
				}

				&.made-by {

					&:hover {
						color: magenta;
					}

				}

			}

			&:last-child {
				margin-right: 0;
			}

			&:not(:last-child)::after {
				content: '/';
				margin: { 
					left: 0.5rem;
					right: 0.5rem;
				}
				color: $dark-gray;
				font-size: 1em;
			}

		}

	}

	&-blobs {
		opacity: 0.2;
		z-index: -1;
		position: absolute;
		top: 10%;
		left: 0;
		width: 100vw;
		transform: translateY(-10%);
	}

	&-background {
		z-index: -1;
		opacity: 0.05;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		//background: url(../assets/backgrounds/pattern-floral.png);
		background-position: top left;
		background-repeat: repeat;
		background-size: auto;
	}

	@include break($type: 'width', $min: 0, $max: $mobile, $orientation: 'both') {
		padding: {
			left: $gutter;
			right: $gutter;
		}
	}

}


// MODIFIERS
.footer {

	/*
	&::before {
		@include transition(
			$property: (opacity, transform),
			$duration: map-get($footer-options, duration),
			$delay: map-get($footer-options, delay),
			$ease: map-get($footer-options, ease),
			$optimize: true
		);
		content: '';
		z-index: 1;
		pointer-events: none;
		opacity: 1;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: $white;
		transform: scale3d(1,1,1);
		transform-origin: right center;
	};

	&.in-view {

		&::before {
			opacity: 0;
			//transform: scale3d(0,1,1);
		};

	}
	*/

}
