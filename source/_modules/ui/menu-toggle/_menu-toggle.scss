/* -------------------------------------------------- */
/* MENU TOGGLE ICON
/* -------------------------------------------------- */

// OPTIONS
$menu-toggle-options: (
	open-label: 'Menu', // Set the label or leave blank. Long text will be truncated.
	close-label: 'Close', // Set the label or leave blank. Long text will be truncated.
	color: $white, // Set the default color or inactive state.
	hover-color: $secondary,
	alt-color: $white,
	active: $white, // Set the active state color when the menu is open.
	border-color: transparent, // Set the menu toggle icon's border color.
	border-active-color: transparent, // Set the active border state color when the menu is open.
	background-color: transparent, // Set the menu toggle icon's background color.
	background-active-color: transparent, // Set the active state color when the menu is open.
	size: 0.5em, // Set the size of the menu toggle icon.
	thickness: 0.2em, // Defines the thickness of lines.
	radius: 0, // Defines the roundness of lines.
	duration: 200ms, // Set the duration of the animation.
	delay: 0, // Delay the animation by this amount. 
	ease: $easeWipe // Set the easing type for this animation.
);


// MAIN
.menubar-toggle {

	$self: &; // Create a variable for the parent element for reference.

	.menu-toggle-icon {

		@include transition(
			$property: (background, transform),
			$duration: map-get($menu-toggle-options, duration),
			$delay: map-get($menu-toggle-options, delay),
			$ease: map-get($menu-toggle-options, ease),
			$optimize: false
		);
		cursor: pointer;
		position: relative;
		width: 4em;
		height: auto;
		font-size: map-get($menu-toggle-options, size);
		-webkit-tap-highlight-color: transparent;

		&-line {

			@include transition(
				$property: (background, transform),
				$duration: map-get($menu-toggle-options, duration),
				$delay: 0,
				$ease: $easeNatural,
				$optimize: false
			);
			content: '';
			display: block;
			position: relative;
			top: 50%;
			margin-top: -0.125em;
			width: 100%;
			height: map-get($menu-toggle-options, thickness);
			border-radius: map-get($menu-toggle-options, radius);
			background: map-get($menu-toggle-options, color);
			transform: rotate(0);

			&::before,
			&::after {
				@include transition(
					$property: (left, right),
					$duration: map-get($menu-toggle-options, duration),
					$delay: 0,
					$ease: $easeNatural,
					$optimize: false
				);
				content: '';
				pointer-events: none;
				position: absolute;
				width: 1.5em;
				height: map-get($menu-toggle-options, thickness);
				border-radius: map-get($menu-toggle-options, radius);
				background: map-get($menu-toggle-options, color);
				transform: rotate(0);
			}

			&::before {
				top: 1em;
				right: 0;
			}

			&::after {
				top: -1em;
				left: 0;
			}

		}

		&::after {
			@include transition(
				$property: (opacity, border, background),
				$duration: map-get($menu-toggle-options, duration),
				$delay: map-get($menu-toggle-options, delay),
				$ease: map-get($menu-toggle-options, ease),
				$optimize: false
			);
			content: '';
			z-index: -1;
			opacity: 1;
			position: absolute;
			top: 50%;
			left: 50%;
			padding: 3rem;
			width: 100%;
			height: 100%;
			border-radius: 100%;
			border: 2px solid map-get($menu-toggle-options, border-color);
			background: map-get($menu-toggle-options, background-color);
			transform: translateX(-50%) translateY(-50%);
		}

	}

	.menu-toggle-label {

		@include animate(
			$name: animate-menu-toggle-is-closed,
			$direction: normal,
			$play: true,
			$duration: map-get($menu-toggle-options, duration),
			$delay: 0,
			$repeat: 1,
			$ease: $easeNatural,
			$reset: true
		);
		@include transition(
			$property: (color, transform),
			$duration: map-get($menu-toggle-options, duration),
			$delay: 0,
			$ease: $easeNatural,
			$optimize: false
		);
		cursor: pointer;
		overflow: hidden;
		padding: {
			left: 2rem;
			right: 2rem;
		}
		width: 100%;
		color: map-get($menu-toggle-options, color);
		font: $copy;
		font-size: 0.9em;
		letter-spacing: 0.125em;
		text-transform: uppercase;
		text-align: right;
		text-overflow: ellipsis;
		white-space: nowrap;
		transform-origin: center center;

		&::before {
			@include transition(
				$property: (opacity),
				$duration: map-get($menu-toggle-options, duration),
				$delay: 0,
				$ease: $easeNatural,
				$optimize: false
			);
			content: map-get($menu-toggle-options, open-label);
			opacity: 1;
		}

		@include break($type: 'width', $min: 0, $max: 320px ) {
			display: none;
		}

	}

	&:not(.is-open):hover {

		.menu-toggle-icon {

			&-line {

				background: map-get($menu-toggle-options, hover-color);

				&::before {
					right: -0.5em;
					background: map-get($menu-toggle-options, hover-color);
				}

				&::after {
					left: -0.5em;
					background: map-get($menu-toggle-options, hover-color);
				}

			}

			&::after {
				//border-color: map-get($menu-toggle-options, hover-color);
				background: map-get($menu-toggle-options, background-color);
			}

		}

	}

}


// MODIFIERS / HELPERS
.menubar-toggle {

	$self: &; // Create a variable for the parent element for reference.

	&.is-open {

		.menu-toggle-icon {

			&-line {

				background: transparent;
				transform: rotate(180deg);

				&::after,
				&::before {

					top: 0;
					left: 1em;
					background: map-get($menu-toggle-options, active);

					@include break($type: 'width', $min: 0, $max: 375px, $orientation: '') {
						left: 1em;
					}

				}

				&::before {
					transform: rotate(135deg);
				}

				&::after {
					transform: rotate(-135deg);
				}

			}

			&::after {
				border-color: map-get($menu-toggle-options, border-active-color);
				background: map-get($menu-toggle-options, background-active-color);
			}

		}

		.menu-toggle-label {

			//color: map-get($menu-toggle-options, active);
			animation-name: animate-menu-toggle-is-open;

			&::before {
				content: map-get($menu-toggle-options, close-label);
				color: map-get($menu-toggle-options, active);
			}

		}

	}

	&.is-ready {

	}

	&.is-top {

	}

	&.is-not-top:not(.is-open) {

		/*
		.menu-toggle-icon {

			&::after {
				opacity: 1;
			};

			&-line {

				background: map-get($menu-toggle-options, alt-color);

				&::before {
					background: map-get($menu-toggle-options, alt-color);
				}

				&::after {
					background: map-get($menu-toggle-options, alt-color);
				}

			}

		}
		*/

		.menu-toggle-label {

			&::before {
				opacity: 0;
				//color: $primary;
			}

		}

	}

	&.is-bottom {

	}

	&.is-not-bottom {

	}

	&.is-scrolling-up {

	}

	&.is-scrolling-down {

	}

}


// ANIMATIONS
@keyframes animate-menu-toggle-is-open {

	0% {
		opacity: 1;
	}

	50% {
		opacity: 0;
		transform: translate3d(10%,0,0);
	}

	100% {
		opacity: 1;
		transform: translate3d(0,0,0);
	}

}


@keyframes animate-menu-toggle-is-closed {

	0% {
		opacity: 1;
	}

	50% {
		opacity: 0;
		transform: translate3d(10%,0,0);
	}

	100% {
		opacity: 1;
		transform: translate3d(0,0,0);
	}

}
