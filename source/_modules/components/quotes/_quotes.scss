/* -------------------------------------------------- */
/* QUOTES
/* -------------------------------------------------- */

// OPTIONS
$quotes-options: (
	background-color: $white,
	duration: 600ms, // Set the duration of the animation.
	delay: 0, // Delay the animation by this amount. 
	ease: $easeWipe // Set the easing type for this animation.
);


// MAIN
.quotes {

	$self: &;

	pointer-events: none;
	overflow: hidden;
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	align-items: center;
	justify-content: flex-start;
	position: relative;
	width: 100%;
	height: 100%;
	//min-height: 100vh;
	//white-space: pre-line;

	.quote {

		@extend .fix-font-render;
		overflow: visible;
		position: absolute;
		//padding-bottom: 6rem;
		//font-size: inherit;
		color: inherit;
		letter-spacing: 0;
		line-height: 0.75em;
		//text-overflow: ellipsis;
		//white-space: nowrap;
		//white-space: pre-line;
		word-wrap: break-word;
		transform-origin: right center;

		.split-text {

			@include transition(
					$property: (color, filter),
					$duration: map-get($quotes-options, duration),
					$delay: map-get($quotes-options, delay),
					$ease: map-get($quotes-options, ease),
					$optimize: true
			);
			padding: {
				top: 0.5rem;
				bottom: 0.5rem;
			};
			color: $black;
			text-shadow: -1px -1px 0 $white,
						 1px -1px 0 $white,
						 -1px 1px 0 $white,
						 1px 1px 0 $white;

			&::before {
				/*
				@include animate(
					$name: animate-quote,
					$direction: normal,
					$play: false,
					$duration: 400ms,
					$delay: 0,
					$repeat: 1,
					$ease: $easeWipe,
					$reset: true
				);
				*/
				@include transition(
					$property: (transform),
					$duration: map-get($quotes-options, duration),
					$delay: map-get($quotes-options, delay),
					$ease: map-get($quotes-options, ease),
					$optimize: true
				);
				content: '';
				z-index: 1;
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				border-top: 1px solid map-get($quotes-options, background-color);
				border-bottom: 1px solid map-get($quotes-options, background-color);
				//background: map-get($quotes-options, background-color);
				transform: scale3d(1,1,1);
				transform-origin: left center;
				will-change: transform;
			}

			&-reveal {

				color: $white;

				&::before {
					transform: scale3d(0,1,1);
					transform-origin: right center;
				}

			}

			@include break($type: 'width', $min: 0, $max: $mobile, $orientation: 'both') {
				color: $white;
				text-shadow: none;
			}

			@include break($type: 'height', $min: 0, $max: 600px, $orientation: '') {
				color: $white;
				text-shadow: none;
			}

		}


	}
	
}


// MODIFIERS
.quotes {

	$self: &;

	#{$self}-element {
		
	}

	&.is-ready {

	}

	&.is-top {

	}

	&.is-not-top {

	}

	&.is-bottom {

	}

	&.is-not-bottom {

	}

	&.is-scrolling-up {

	}

	&.is-scrolling-down {

	}

}


// ANIMATIONS
@keyframes animate-quote {

	0% {
		transform: scale3d(0,1,1);
		transform-origin: left center;
	}

	50% {
		//background: $accent;
		transform: scale3d(1,1,1);
		transform-origin: right center;
	}

	100% {
		//background: $accent;
		transform: scale3d(0,1,1);
		transform-origin: right center;
	}

}
