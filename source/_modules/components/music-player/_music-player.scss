/* -------------------------------------------------- */
/* MUSIC PLAYER
/* -------------------------------------------------- */

// OPTIONS
$music-player-options: (
	playing-label: 'Playing',
	paused-label: 'Paused',
	text-color: $primary,
	text-hover-color: $white,
	active-text-color: $black,
	background-color: $white,
	background-hover-color: $primary,
	active-background-color: $white,
	duration: 200ms, // Set the duration of the animation.
	delay: 0, // Delay the animation by this amount. 
	ease: $easeWipe // Set the easing type for this animation.
);


// MAIN
.music-player {

	$self: &;

	cursor: pointer;
	position: fixed;
	top: 15%;
	right: 3em;
	width: 75px;
	height: 60px;

	&::before {
		@include transition(
			$property: (color, transform),
			$duration: map-get($music-player-options, duration),
			$delay: map-get($music-player-options, duration),
			$ease: map-get($music-player-options, ease),
			$optimize: true
		);
		content: map-get($music-player-options, playing-label);
		position: absolute;
		width: 100%;
		color: $white;
		font: $copy;
		font-size: 0.9em;
		letter-spacing: 0.2em;
		text-align: center;
		text-transform: uppercase;
		transform: translate3d(0,38px,0);
	}

	&-blobs {

		@include transition(
			$property: (border),
			$duration: map-get($music-player-options, duration),
			$delay: map-get($music-player-options, duration),
			$ease: map-get($music-player-options, ease),
			$optimize: true
		);
		overflow: hidden;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 35px;
		border-bottom: thin solid $white;

		.blobs {

			top: 0;
			left: 0;

			.blob {
				transform-origin: bottom center;
			}

			.blob:nth-of-type(1) {
				fill: none;
				stroke: lighten($secondary, 25%);
				stroke-width: 1.25em;
			}

			.blob:nth-of-type(2) {
				fill: none;
				stroke: lighten($secondary, 15%);
				stroke-width: 1.25em;
			}

			.blob:nth-of-type(3) {
				fill: none;
				stroke: lighten($secondary, 5%);
				stroke-width: 1.25em;
			}

		}

	}

	&-is-paused {

		&::before {
			content: map-get($music-player-options, paused-label);
			color: $secondary;
			transform: translate3d(0,18px,0);
		}

		#{$self}-blobs {
			border-color: $secondary;
		}

	}

	@include break($type: 'width', $min: 0, $max: $laptop, $orientation: '') {

		top: 15%;
		right: -2em;
		transform: rotate(-90deg);

		&-blobs {
			border: none;
		}

	}
	
}


// MODIFIERS
.music-player {

	$self: &;

	#{$self}-element {
		
	}

	&.is-ready {

	}

	&.is-top {

	}

	&.is-not-top {

	}

	&.is-bottom {

	}

	&.is-not-bottom {

	}

	&.is-scrolling-up {

	}

	&.is-scrolling-down {

	}

}
